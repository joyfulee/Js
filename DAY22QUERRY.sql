-- 쿼리18

/* SUBAUERY (하부쿼리)  SELECT 쿼리문 안 (SELECT 쿼리문)
   1) 메인쿼리보다 먼저 실행 
   2) 서브쿼리 안 ORDER BY 사용할 수 없음
   
  ① 단일 행 서브쿼리 (Single Row SubQuery)
     :단일 행 연산자를 사용 서브쿼리의 하나의 결과값 출력
  ② 
  ③
  ④ 중첩질의 : 비교연산자
*/

-- LOCALMADANG 
-- 가장 비싼 도서 찾기 
SELECT  MAX(PRICE)FROM BOOK; 

SELECT BOOKNAME FROM BOOK 
WHERE PRICE = (SELECT MAX (PRICE) FROM BOOK);

-- 도서 구매한 ID 찾기 -> 중복제외
SELECT DISTINCT CUSTID FROM ORDERS; 

SELECT NAME 
FROM CUSTOMER
WHERE CUSTID IN(SELECT DISTINCT CUSTID FROM ORDERS)
ORDER BY NAME;

SELECT NAME 
FROM CUSTOMER
WHERE CUSTID =ANY(SELECT DISTINCT CUSTID FROM ORDERS)
ORDER BY NAME;

--대한출판사 구입한 고객 ID찾기 
SELECT BOOKID FROM ORDERS WHERE BOOKID
IN(SELECT BOOKID FROM BOOK WHERE PUBLISHER='대한출판사');

SELECT BOOKID FROM ORDERS WHERE BOOKID
=ANY(SELECT BOOKID FROM BOOK WHERE PUBLISHER='대한출판사');

--해당 고객ID 이름찾기 
SELECT NAME FROM CUSTOMER WHERE CUSTID 
    IN(SELECT CUSTID FROM ORDERS WHERE BOOKID
        IN(SELECT BOOKID FROM BOOK WHERE PUBLISHER='대한출판사'));
        
SELECT NAME FROM CUSTOMER WHERE CUSTID 
    =ANY(SELECT CUSTID FROM ORDERS WHERE BOOKID
        =ANY(SELECT BOOKID FROM BOOK WHERE PUBLISHER='대한출판사'));     


-- 이상미디어 출판한 도서 구매고객 이름, 연락처, 성별(남,여) 출력
SELECT NAME,PHONE,DECODE(SEX,'F','여','남')SEX FROM CUSTOMER WHERE CUSTID
    =ANY(SELECT CUSTID FROM ORDERS WHERE BOOKID
        =ANY(SELECT BOOKID FROM BOOK WHERE PUBLISHER='이상미디어'));
        

-- 출판사별 평균 도서가격보다 비싼 도서 
-- BOOKTBL 두번사용
-- 출판사 도서별 평균가격 구하기, 


SELECT BOOKNAME, PUBLISHER
FROM BOOK B1
WHERE B1.PRICE > 
    (SELECT AVGPRICE 
     FROM (SELECT PUBLISHER, AVG(PRICE) AVGPRICE FROM BOOK GROUP BY PUBLISHER)B2
     WHERE B1.PUBLISHER=B2.PUBLISHER);


-- 쿼리19
SELECT AVG(SALEPRICE)SALEPRICE FROM ORDERS;

SELECT ORDERID, SALEPRICE FROM ORDERS
WHERE SALEPRICE <=(SELECT AVG(SALEPRICE)SALEPRICE FROM ORDERS);

SELECT CUSTID, AVG(SALEPRICE)SALEPRICE FROM ORDERS GROUP BY CUSTID;

SELECT ORDERID, CUSTID, SALEPRICE FROM ORDERS O1
WHERE SALEPRICE > (SELECT SALEPRICE FROM
    (SELECT CUSTID, AVG(SALEPRICE)SALEPRICE FROM ORDERS GROUP BY CUSTID)O2
    WHERE O1.CUSTID=O2.CUSTID);
    
SELECT CUSTID FROM CUSTOMER WHERE ADDRESS LIKE '대한민국%';

SELECT SUM(SALEPRICE) "대한민국 총판매액"
FROM ORDERS 
    WHERE CUSTID IN (SELECT CUSTID FROM CUSTOMER WHERE ADDRESS LIKE '대한민국%');
    
SELECT SUM(SALEPRICE) "대한민국 총판매액"
FROM ORDERS 
    WHERE CUSTID =ANY(SELECT CUSTID FROM CUSTOMER WHERE ADDRESS LIKE '대한민국%');    


------------ 다시 풀어보기 (오류) --------------------------------------     
SELECT SUM(SALEPRICE)
FROM ORDERS O
WHERE EXISTS (SELECT CUSTID FROM CUSTOMER C
WHERE (SELECT C.CUSTID=O.CUSTID AND C.ADDRESS LIKE '대한민국%');
---------------------------------------------------------------------------


-- 쿼리20
SELECT SALEPRICE FROM ORDERS WHERE CUSTID=3;

--EXISTS 연산자 사용
SELECT ORDERID, SALEPRICE 
FROM ORDERS O1
WHERE EXISTS (SELECT SALEPRICE FROM ORDERS O2 WHERE O1.SALEPRICE>
            (SELECT MAX (SALEPRICE) FROM ORDERS WHERE (CUSTID=3)));

SELECT ORDERID, SALEPRICE 
FROM ORDERS 
    WHERE SALEPRICE > ALL(SELECT SALEPRICE FROM ORDERS WHERE CUSTID=3);
    
    
 -- 쿼리21
 SELECT SUM (SALEPRICE) "대한민국 총판매액"
 FROM ORDERS O
 WHERE EXISTS (SELECT C.CUSTID FROM CUSTOMER C
 WHERE O.CUSTID=C.CUSTID AND C.ADDRESS LIKE '대한민국%');
 
 
 -- 쿼리22
 SELECT (SELECT NAME , FROM CUSTOMER C WHERE C.CUSTID=O.CUSTID) NAME, 
 SUM(SALEPRICE)SUMSALFRICE FROM ORSERS GROUP BY CUSTID;


-- 쿼리23
CREATE TABLE NEWORDERS AS 
SELECT * FROM ORDERS;

ALTER TABLE NEWORDERS
ADD BOOKNAME VARCHAR2(40);

UPDATE NEWORDERS O
SET BOOKNAME = (SELECT BOOKNAME FROM BOOK B WHERE O.BOOKID = B.BOOKID);


-- 쿼리24
SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID <=2;

--인라인 뷰 (JOIN)

SELECT O.CUSTID ,C.NAME , SUM(SALEPRICE)
FROM ORDERS O ,(SELECT CUSTID, NAME FROM CUSTOMER WHERE CUSTID <=2) C  -- 테이블2개
WHERE O.CUSTID=C.CUSTID
GROUP BY O.CUSTID,NAME; -- 집계함수 사용하기 위해 GROUP BY

--스칼라 부속질의 
SELECT CUSTID,(SELECT NAME FROM CUSTOMER C WHERE O.CUSTID = C.CUSTID) NAME,
SUM(SALEPRICE)
FROM ORDERS O
WHERE CUSTID <=2
GROUP BY CUSTID;

SELECT BOOKID, BOOKNAME FROM BOOK WHERE PRICE >=10000;

-- 인라인뷰
SELECT O.BOOKID, BOOKNAME , SUM(SALEPRICE) -- 결과
FROM ORDERS O ,--BOOKID = BOOKID : 결과테이블
(SELECT BOOKID, BOOKNAME FROM BOOK WHERE PRICE >=10000) B -- : 조건테이블
WHERE O.BOOKID = B.BOOKID -- 공통 필드
GROUP BY O.BOOKID, BOOKNAME; -- 집계합수 (조건테이블 SELECT)
-- 스칼라 부속질의
SELECT BOOKID,    -- 공통필드 
(SELECT BOOKNAME FROM BOOK B WHERE PRICE>=10000 AND O.BOOKID=B.BOOKID) AS BNAME 
, SUM(SALEPRICE)SALEPRICE 
FROM ORDERS O
GROUP BY O.BOOKID;

HAVIING (SELECT BOOKNAME FROM BOOK B WHERE PRICE >=10000 AND O.BOOKID=B.BOOKID)
IS NOT MULL;



